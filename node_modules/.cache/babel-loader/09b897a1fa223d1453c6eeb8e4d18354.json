{"ast":null,"code":"var _jsxFileName = \"/Users/andrei/Desktop/diplom-project/movies-app/src/Pages/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Tab, Tabs, TextField } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { SingleContent } from \"../Components/SingleContext/SingleContent\";\nimport { Pagination } from \"@mui/material\";\nimport axios from \"axios\";\nimport styled from \"./page.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Search = () => {\n  _s();\n\n  const [type, setType] = useState(0);\n  const [searchText, setSearchText] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n\n  const fetchSearch = async () => {\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/search/${type ? \"tv\" : \"movie\"}?api_key=e9e3f515fc57336efd9167d5b156073d&language=en-US&query=${searchText}&page=${page}&include_adult=false`);\n    setContent(data.results);\n    setNumOfPages(data.total_pages);\n  };\n\n  useEffect(() => {\n    fetchSearch();\n  }, [type, page]);\n\n  const handlePageChange = e => {\n    setPage(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          flex: 1\n        },\n        className: \"searchBox\",\n        label: \"Search\",\n        variant: \"filled\",\n        onChange: e => setSearchText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {},\n        variant: \"contained\",\n        style: {\n          marginLeft: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      value: type,\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      onChange: (event, newValue) => {\n        setType(newValue);\n        setPage(1);\n      },\n      style: {\n        paddingBottom: 5\n      },\n      \"aria-label\": \"disabled tabs example\",\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        style: {\n          width: \"50%\"\n        },\n        label: \"Search Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        style: {\n          width: \"50%\"\n        },\n        label: \"Search TV Series\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending\",\n      children: [content && content.map(c => /*#__PURE__*/_jsxDEV(SingleContent, {\n        id: c.id,\n        poster: c.poster_path,\n        title: c.title || c.name,\n        date: c.first_air_date || c.release_date,\n        media_type: type ? \"tv\" : \"movie\",\n        vote_average: c.vote_average\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)), searchText && !content && (type ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Series Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Movies Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 52\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      onChange: e => handlePageChange(e.target.textContent),\n      count: numOfPages,\n      color: \"primary\",\n      hideNextButton: true,\n      hidePrevButton: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"mGq/hCJqpmPMBVLbCYScLl1qC3o=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/andrei/Desktop/diplom-project/movies-app/src/Pages/Search.jsx"],"names":["React","useEffect","useState","Button","Tab","Tabs","TextField","SearchIcon","SingleContent","Pagination","axios","styled","Search","type","setType","searchText","setSearchText","page","setPage","content","setContent","numOfPages","setNumOfPages","fetchSearch","data","get","results","total_pages","handlePageChange","e","flex","target","value","marginLeft","event","newValue","paddingBottom","width","map","c","id","poster_path","title","name","first_air_date","release_date","vote_average","textContent"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Button, Tab, Tabs, TextField} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport {SingleContent} from \"../Components/SingleContext/SingleContent\";\nimport {Pagination} from \"@mui/material\";\nimport axios from \"axios\";\nimport styled from \"./page.module.css\";\n\nexport const Search = () => {\n\n    const [type, setType] = useState(0);\n    const [searchText, setSearchText] = useState(\"\");\n    const [page, setPage] = useState(1);\n    const [content, setContent] = useState([]);\n    const [numOfPages, setNumOfPages] = useState();\n\n    const fetchSearch = async () => {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/search/${type ? \"tv\" : \"movie\"}?api_key=e9e3f515fc57336efd9167d5b156073d&language=en-US&query=${searchText}&page=${page}&include_adult=false`);\n\n        setContent(data.results);\n        setNumOfPages(data.total_pages);\n    };\n\n\n    useEffect(() => {\n        fetchSearch();\n\n    }, [type, page]);\n\n\n    const handlePageChange = (e) => {\n        setPage(e);\n    };\n\n    return (\n        <div>\n            <div>\n                <TextField\n                    style={{flex: 1}}\n                    className=\"searchBox\"\n                    label=\"Search\"\n                    variant=\"filled\"\n                    onChange={(e) => setSearchText(e.target.value)}\n                />\n                <Button\n                    onClick={() => {\n                    }}\n                    variant=\"contained\"\n                    style={{marginLeft: 10}}\n                >\n                    <SearchIcon fontSize=\"large\"/>\n                </Button>\n            </div>\n\n            <Tabs\n                value={type}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={(event, newValue) => {\n                    setType(newValue);\n                    setPage(1);\n                }}\n                style={{paddingBottom: 5}}\n                aria-label=\"disabled tabs example\"\n            >\n                <Tab style={{width: \"50%\"}} label=\"Search Movies\"/>\n                <Tab style={{width: \"50%\"}} label=\"Search TV Series\"/>\n            </Tabs>\n\n            <div className=\"trending\">\n                {content &&\n                content.map((c) => (\n                    <SingleContent\n                        key={c.id}\n                        id={c.id}\n                        poster={c.poster_path}\n                        title={c.title || c.name}\n                        date={c.first_air_date || c.release_date}\n                        media_type={type ? \"tv\" : \"movie\"}\n                        vote_average={c.vote_average}\n                    />\n                ))}\n                {searchText &&\n                !content &&\n                (type ? <h2>No Series Found</h2> : <h2>No Movies Found</h2>)}\n            </div>\n            <Pagination\n                onChange={(e) => handlePageChange(e.target.textContent)}\n                count={numOfPages}\n                color=\"primary\"\n                hideNextButton\n                hidePrevButton\n            />\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}