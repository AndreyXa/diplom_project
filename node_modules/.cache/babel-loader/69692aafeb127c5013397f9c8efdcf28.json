{"ast":null,"code":"var _jsxFileName = \"/Users/andrei/Desktop/diplom-project/movies-app/src/Pages/Movies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from \"./page.module.css\";\nimport { SingleContent } from \"../Components/SingleContext/SingleContent\";\nimport { Pagination } from \"@mui/material\";\nimport { Genres } from \"../Components/Genres/Genres\";\nimport { useGenre } from \"../helper/useGenre\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Movies = () => {\n  _s();\n\n  const [content, setContent] = useState([]);\n  const [page, setPage] = useState(1);\n  const [numOfPages, setNumOfPages] = useState();\n  const [genres, setGenres] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const genreforURL = useGenre(selectedGenres);\n\n  const fetchMovies = async () => {\n    const response = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_watch_monetization_types=flatrate&page=${page}&with_genres=${genreforURL}`);\n\n    if (response.ok) {\n      const data = await response.json();\n      console.log(data);\n      setContent(data.results);\n      setNumOfPages(data.total_pages);\n    } else {\n      alert(\"error\" + response.status);\n    }\n  };\n\n  useEffect(() => {\n    fetchMovies();\n  }, [page, genreforURL]);\n\n  const handlePageChange = e => {\n    setPage(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: styled.pageTitle,\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Genres, {\n      type: \"movie\",\n      selectedGenres: selectedGenres,\n      setSelectedGenres: setSelectedGenres,\n      genres: genres,\n      setGenres: setGenres,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styled.trending,\n      children: content && content.map(item => /*#__PURE__*/_jsxDEV(SingleContent, {\n        id: item.id,\n        poster: item.poster_path,\n        title: item.title || item.name,\n        date: item.first_air_date || item.release_date,\n        media_type: \"movie\",\n        vote_average: item.vote_average\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      onChange: e => handlePageChange(e.target.textContent),\n      count: numOfPages,\n      color: \"primary\",\n      hideNextButton: true,\n      hidePrevButton: true,\n      className: styled.pagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Movies, \"m9eZO0BOC7SyvRZe6HUGqbCXrzk=\", false, function () {\n  return [useGenre];\n});\n\n_c = Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/andrei/Desktop/diplom-project/movies-app/src/Pages/Movies.jsx"],"names":["React","useEffect","useState","styled","SingleContent","Pagination","Genres","useGenre","Movies","content","setContent","page","setPage","numOfPages","setNumOfPages","genres","setGenres","selectedGenres","setSelectedGenres","genreforURL","fetchMovies","response","fetch","process","env","REACT_APP_API_KEY","ok","data","json","console","log","results","total_pages","alert","status","handlePageChange","e","pageTitle","trending","map","item","id","poster_path","title","name","first_air_date","release_date","vote_average","target","textContent","pagination"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styled from \"./page.module.css\";\nimport {SingleContent} from \"../Components/SingleContext/SingleContent\";\nimport {Pagination} from \"@mui/material\";\nimport {Genres} from \"../Components/Genres/Genres\";\nimport {useGenre} from \"../helper/useGenre\";\n\nexport const Movies = () => {\n\n    const [content, setContent] = useState([]);\n    const [page, setPage] = useState(1);\n    const [numOfPages, setNumOfPages] = useState();\n    const [genres, setGenres] = useState([]);\n    const [selectedGenres, setSelectedGenres] = useState([]);\n    const genreforURL = useGenre(selectedGenres);\n\n\n    const fetchMovies = async () => {\n        const response = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_watch_monetization_types=flatrate&page=${page}&with_genres=${genreforURL}`);\n        if (response.ok) {\n            const data = await response.json();\n            console.log(data);\n            setContent(data.results);\n            setNumOfPages(data.total_pages);\n        } else {\n            alert(\"error\" + response.status);\n        }\n    }\n\n    useEffect(() => {\n        fetchMovies();\n    }, [page, genreforURL]);\n\n    const handlePageChange = (e) => {\n        setPage(e);\n    };\n\n    return (\n        <div >\n            <span className={styled.pageTitle}>Movies</span>\n            <Genres\n                type=\"movie\"\n                selectedGenres={selectedGenres}\n                setSelectedGenres={setSelectedGenres}\n                genres={genres}\n                setGenres={setGenres}\n                setPage={setPage}\n            />\n            <div className={styled.trending}>\n                {\n                    content && content.map((item) => (\n                        <SingleContent\n                            key={item.id}\n                            id={item.id}\n                            poster={item.poster_path}\n                            title={item.title || item.name}\n                            date={item.first_air_date || item.release_date}\n                            media_type=\"movie\"\n                            vote_average={item.vote_average}/>\n                    ))\n                }\n            </div>\n            <Pagination\n                onChange={(e) => handlePageChange(e.target.textContent)}\n                count={numOfPages}\n                color=\"primary\"\n                hideNextButton\n                hidePrevButton\n                className={styled.pagination}\n            />\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}