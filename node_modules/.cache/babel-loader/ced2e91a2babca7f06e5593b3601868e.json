{"ast":null,"code":"var _jsxFileName = \"/Users/andrei/Desktop/diplom-project/movies-app/src/Pages/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Tab, Tabs, TextField } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { SingleContent } from \"../Components/SingleContext/SingleContent\";\nimport { Pagination } from \"@mui/material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Search = () => {\n  _s();\n\n  const [type, setType] = useState(0);\n  const [searchText, setSearchText] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n\n  const fetchSearch = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(``);\n    } catch (e) {}\n  };\n\n  const handlePageChange = e => {\n    setPage(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          flex: 1\n        },\n        className: \"searchBox\",\n        label: \"Search\",\n        variant: \"filled\",\n        onChange: e => setSearchText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {},\n        variant: \"contained\",\n        style: {\n          marginLeft: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      value: type,\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      onChange: (event, newValue) => {\n        setType(newValue);\n        setPage(1);\n      },\n      style: {\n        paddingBottom: 5\n      },\n      \"aria-label\": \"disabled tabs example\",\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        style: {\n          width: \"50%\"\n        },\n        label: \"Search Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        style: {\n          width: \"50%\"\n        },\n        label: \"Search TV Series\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending\",\n      children: [content && content.map(c => /*#__PURE__*/_jsxDEV(SingleContent, {\n        id: c.id,\n        poster: c.poster_path,\n        title: c.title || c.name,\n        date: c.first_air_date || c.release_date,\n        media_type: type ? \"tv\" : \"movie\",\n        vote_average: c.vote_average\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)), searchText && !content && (type ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Series Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Movies Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 52\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      onChange: e => handlePageChange(e.target.textContent),\n      count: numOfPages,\n      color: \"primary\",\n      hideNextButton: true,\n      hidePrevButton: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"dFd6F2X/wB57hON6rdlizw+OoAY=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/andrei/Desktop/diplom-project/movies-app/src/Pages/Search.jsx"],"names":["React","useState","Button","Tab","Tabs","TextField","SearchIcon","SingleContent","Pagination","axios","Search","type","setType","searchText","setSearchText","page","setPage","content","setContent","numOfPages","setNumOfPages","fetchSearch","data","get","e","handlePageChange","flex","target","value","marginLeft","event","newValue","paddingBottom","width","map","c","id","poster_path","title","name","first_air_date","release_date","vote_average","textContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,EAAgBC,GAAhB,EAAqBC,IAArB,EAA2BC,SAA3B,QAA2C,mBAA3C;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAAQC,aAAR,QAA4B,2CAA5B;AACA,SAAQC,UAAR,QAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,EAA5C;;AAEA,QAAMoB,WAAW,GAAG,YAAY;AAC5B,QAAI;AACA,YAAM;AAACC,QAAAA;AAAD,UAAS,MAAMb,KAAK,CAACc,GAAN,CAAW,EAAX,CAArB;AACH,KAFD,CAEE,OAAOC,CAAP,EAAU,CAEX;AACJ,GAND;;AAQA,QAAMC,gBAAgB,GAAID,CAAD,IAAO;AAC5BR,IAAAA,OAAO,CAACQ,CAAD,CAAP;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAA,8BACI,QAAC,SAAD;AACI,QAAA,KAAK,EAAE;AAAEE,UAAAA,IAAI,EAAE;AAAR,SADX;AAEI,QAAA,SAAS,EAAC,WAFd;AAGI,QAAA,KAAK,EAAC,QAHV;AAII,QAAA,OAAO,EAAC,QAJZ;AAKI,QAAA,QAAQ,EAAGF,CAAD,IAAOV,aAAa,CAACU,CAAC,CAACG,MAAF,CAASC,KAAV;AALlC;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,MAAD;AACI,QAAA,OAAO,EAAE,MAAK,CAAE,CADpB;AAEI,QAAA,OAAO,EAAC,WAFZ;AAGI,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAHX;AAAA,+BAKI,QAAC,UAAD;AAAY,UAAA,QAAQ,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAkBI,QAAC,IAAD;AACI,MAAA,KAAK,EAAElB,IADX;AAEI,MAAA,cAAc,EAAC,SAFnB;AAGI,MAAA,SAAS,EAAC,SAHd;AAII,MAAA,QAAQ,EAAE,CAACmB,KAAD,EAAQC,QAAR,KAAqB;AAC3BnB,QAAAA,OAAO,CAACmB,QAAD,CAAP;AACAf,QAAAA,OAAO,CAAC,CAAD,CAAP;AACH,OAPL;AAQI,MAAA,KAAK,EAAE;AAAEgB,QAAAA,aAAa,EAAE;AAAjB,OARX;AASI,oBAAW,uBATf;AAAA,8BAWI,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAA8B,QAAA,KAAK,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAA8B,QAAA,KAAK,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAiCI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,iBACKhB,OAAO,IACRA,OAAO,CAACiB,GAAR,CAAaC,CAAD,iBACR,QAAC,aAAD;AAEI,QAAA,EAAE,EAAEA,CAAC,CAACC,EAFV;AAGI,QAAA,MAAM,EAAED,CAAC,CAACE,WAHd;AAII,QAAA,KAAK,EAAEF,CAAC,CAACG,KAAF,IAAWH,CAAC,CAACI,IAJxB;AAKI,QAAA,IAAI,EAAEJ,CAAC,CAACK,cAAF,IAAoBL,CAAC,CAACM,YALhC;AAMI,QAAA,UAAU,EAAE9B,IAAI,GAAG,IAAH,GAAU,OAN9B;AAOI,QAAA,YAAY,EAAEwB,CAAC,CAACO;AAPpB,SACSP,CAAC,CAACC,EADX;AAAA;AAAA;AAAA;AAAA,cADJ,CAFJ,EAaKvB,UAAU,IACX,CAACI,OADA,KAEAN,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,gBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFlC,CAbL;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCJ,eAkDI,QAAC,UAAD;AACI,MAAA,QAAQ,EAAGa,CAAD,IAAOC,gBAAgB,CAACD,CAAC,CAACG,MAAF,CAASgB,WAAV,CADrC;AAEI,MAAA,KAAK,EAAExB,UAFX;AAGI,MAAA,KAAK,EAAC,SAHV;AAII,MAAA,cAAc,MAJlB;AAKI,MAAA,cAAc;AALlB;AAAA;AAAA;AAAA;AAAA,YAlDJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4DH,CAhFM;;GAAMT,M;;KAAAA,M","sourcesContent":["import React, {useState} from 'react';\nimport {Button, Tab, Tabs, TextField} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport {SingleContent} from \"../Components/SingleContext/SingleContent\";\nimport {Pagination} from \"@mui/material\";\nimport axios from \"axios\";\n\nexport const Search = () => {\n\n    const [type, setType] = useState(0);\n    const [searchText, setSearchText] = useState(\"\");\n    const [page, setPage] = useState(1);\n    const [content, setContent] = useState([]);\n    const [numOfPages, setNumOfPages] = useState();\n\n    const fetchSearch = async () => {\n        try {\n            const {data} = await axios.get(``)\n        } catch (e) {\n\n        }\n    };\n\n    const handlePageChange = (e) => {\n        setPage(e);\n    };\n\n    return (\n        <div>\n            <div>\n                <TextField\n                    style={{ flex: 1 }}\n                    className=\"searchBox\"\n                    label=\"Search\"\n                    variant=\"filled\"\n                    onChange={(e) => setSearchText(e.target.value)}\n                />\n                <Button\n                    onClick={() =>{}}\n                    variant=\"contained\"\n                    style={{ marginLeft: 10 }}\n                >\n                    <SearchIcon fontSize=\"large\" />\n                </Button>\n            </div>\n\n            <Tabs\n                value={type}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={(event, newValue) => {\n                    setType(newValue);\n                    setPage(1);\n                }}\n                style={{ paddingBottom: 5 }}\n                aria-label=\"disabled tabs example\"\n            >\n                <Tab style={{ width: \"50%\" }} label=\"Search Movies\" />\n                <Tab style={{ width: \"50%\" }} label=\"Search TV Series\" />\n            </Tabs>\n\n            <div className=\"trending\">\n                {content &&\n                content.map((c) => (\n                    <SingleContent\n                        key={c.id}\n                        id={c.id}\n                        poster={c.poster_path}\n                        title={c.title || c.name}\n                        date={c.first_air_date || c.release_date}\n                        media_type={type ? \"tv\" : \"movie\"}\n                        vote_average={c.vote_average}\n                    />\n                ))}\n                {searchText &&\n                !content &&\n                (type ? <h2>No Series Found</h2> : <h2>No Movies Found</h2>)}\n            </div>\n            <Pagination\n                onChange={(e) => handlePageChange(e.target.textContent)}\n                count={numOfPages}\n                color=\"primary\"\n                hideNextButton\n                hidePrevButton\n            />\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}