{"ast":null,"code":"var _jsxFileName = \"/Users/andrei/Desktop/diplom-project/movies-app/src/Components/Genres/Genres.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Chip } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Genres = ({\n  selectedGenres,\n  setSelectedGenres,\n  genres,\n  setGenres,\n  type,\n  setPage\n}) => {\n  _s();\n\n  const fetchGenres = async () => {\n    const response = await fetch(`https://api.themoviedb.org/3/genre/${type}/list?api_key=e9e3f515fc57336efd9167d5b156073d&language=en-US`);\n\n    if (response.ok) {\n      const data = await response.json();\n      setGenres(data.genres);\n    } else {\n      alert(\"error\" + response.status);\n    }\n  };\n\n  useEffect(() => {\n    fetchGenres();\n    return () => {\n      setGenres({});\n    };\n  }, []);\n\n  const handleAdd = genre => {\n    setSelectedGenres([...selectedGenres, genre]);\n    setGenres(genres.filter(item => item.id !== genre.id));\n    setPage(1);\n  };\n\n  const handleRemove = genre => {\n    setSelectedGenres(selectedGenres.filter(selected => selected.id !== genre.id));\n    setGenres([...genres, genre]);\n    setPage(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"6px 0\"\n    },\n    children: [selectedGenres.map(genre => /*#__PURE__*/_jsxDEV(Chip, {\n      style: {\n        margin: 2\n      },\n      label: genre.name,\n      color: \"primary\",\n      clickable: true,\n      size: \"small\",\n      onDelete: () => handleRemove(genre)\n    }, genre.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)), genres.map(genre => /*#__PURE__*/_jsxDEV(Chip, {\n      style: {\n        margin: 2\n      },\n      label: genre.name,\n      clickable: true,\n      size: \"small\",\n      onClick: () => handleAdd(genre)\n    }, genre.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Genres, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Genres;\n\nvar _c;\n\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"sources":["/Users/andrei/Desktop/diplom-project/movies-app/src/Components/Genres/Genres.jsx"],"names":["React","useEffect","Chip","Genres","selectedGenres","setSelectedGenres","genres","setGenres","type","setPage","fetchGenres","response","fetch","ok","data","json","alert","status","handleAdd","genre","filter","item","id","handleRemove","selected","padding","map","margin","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,mBAAnB;;AAEA,OAAO,MAAMC,MAAM,GAAG,CAAC;AACIC,EAAAA,cADJ;AAEIC,EAAAA,iBAFJ;AAGIC,EAAAA,MAHJ;AAIIC,EAAAA,SAJJ;AAKIC,EAAAA,IALJ;AAMIC,EAAAA;AANJ,CAAD,KAOO;AAAA;;AAEzB,QAAMC,WAAW,GAAG,YAAY;AAC5B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAG,sCAAqCJ,IAAK,+DAA7C,CAA5B;;AACA,QAAIG,QAAQ,CAACE,EAAb,EAAiB;AACb,YAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACAR,MAAAA,SAAS,CAACO,IAAI,CAACR,MAAN,CAAT;AACH,KAHD,MAGO;AACHU,MAAAA,KAAK,CAAC,UAAUL,QAAQ,CAACM,MAApB,CAAL;AACH;AACJ,GARD;;AAUAhB,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW;AAEX,WAAO,MAAM;AACTH,MAAAA,SAAS,CAAC,EAAD,CAAT;AACH,KAFD;AAGH,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMW,SAAS,GAAIC,KAAD,IAAW;AACzBd,IAAAA,iBAAiB,CAAC,CAAC,GAAGD,cAAJ,EAAoBe,KAApB,CAAD,CAAjB;AACAZ,IAAAA,SAAS,CAACD,MAAM,CAACc,MAAP,CAAeC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYH,KAAK,CAACG,EAA1C,CAAD,CAAT;AACAb,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAJD;;AAMA,QAAMc,YAAY,GAAIJ,KAAD,IAAW;AAC5Bd,IAAAA,iBAAiB,CACbD,cAAc,CAACgB,MAAf,CAAuBI,QAAD,IAAcA,QAAQ,CAACF,EAAT,KAAgBH,KAAK,CAACG,EAA1D,CADa,CAAjB;AAGAf,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYa,KAAZ,CAAD,CAAT;AACAV,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAND;;AAQA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEgB,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA,eACKrB,cAAc,CAACsB,GAAf,CAAoBP,KAAD,iBAChB,QAAC,IAAD;AACI,MAAA,KAAK,EAAE;AAAEQ,QAAAA,MAAM,EAAE;AAAV,OADX;AAEI,MAAA,KAAK,EAAER,KAAK,CAACS,IAFjB;AAII,MAAA,KAAK,EAAC,SAJV;AAKI,MAAA,SAAS,MALb;AAMI,MAAA,IAAI,EAAC,OANT;AAOI,MAAA,QAAQ,EAAE,MAAML,YAAY,CAACJ,KAAD;AAPhC,OAGSA,KAAK,CAACG,EAHf;AAAA;AAAA;AAAA;AAAA,YADH,CADL,EAYKhB,MAAM,CAACoB,GAAP,CAAYP,KAAD,iBACR,QAAC,IAAD;AACI,MAAA,KAAK,EAAE;AAAEQ,QAAAA,MAAM,EAAE;AAAV,OADX;AAEI,MAAA,KAAK,EAAER,KAAK,CAACS,IAFjB;AAII,MAAA,SAAS,MAJb;AAKI,MAAA,IAAI,EAAC,OALT;AAMI,MAAA,OAAO,EAAE,MAAMV,SAAS,CAACC,KAAD;AAN5B,OAGSA,KAAK,CAACG,EAHf;AAAA;AAAA;AAAA;AAAA,YADH,CAZL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAlEM;;GAAMnB,M;;KAAAA,M","sourcesContent":["import React, {useEffect} from 'react';\nimport {Chip} from \"@material-ui/core\";\n\nexport const Genres = ({\n                           selectedGenres,\n                           setSelectedGenres,\n                           genres,\n                           setGenres,\n                           type,\n                           setPage,\n                       }) => {\n\n    const fetchGenres = async () => {\n        const response = await fetch( `https://api.themoviedb.org/3/genre/${type}/list?api_key=e9e3f515fc57336efd9167d5b156073d&language=en-US`);\n        if (response.ok) {\n            const data = await response.json();\n            setGenres(data.genres);\n        } else {\n            alert(\"error\" + response.status);\n        }\n    }\n\n    useEffect(() => {\n        fetchGenres();\n\n        return () => {\n            setGenres({});\n        }\n    }, []);\n\n    const handleAdd = (genre) => {\n        setSelectedGenres([...selectedGenres, genre]);\n        setGenres(genres.filter((item) => item.id !== genre.id));\n        setPage(1);\n    };\n\n    const handleRemove = (genre) => {\n        setSelectedGenres(\n            selectedGenres.filter((selected) => selected.id !== genre.id)\n        );\n        setGenres([...genres, genre]);\n        setPage(1);\n    };\n\n    return (\n        <div style={{ padding: \"6px 0\" }}>\n            {selectedGenres.map((genre) => (\n                <Chip\n                    style={{ margin: 2 }}\n                    label={genre.name}\n                    key={genre.id}\n                    color=\"primary\"\n                    clickable\n                    size=\"small\"\n                    onDelete={() => handleRemove(genre)}\n                />\n            ))}\n            {genres.map((genre) => (\n                <Chip\n                    style={{ margin: 2 }}\n                    label={genre.name}\n                    key={genre.id}\n                    clickable\n                    size=\"small\"\n                    onClick={() => handleAdd(genre)}\n                />\n            ))}\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}