{"ast":null,"code":"import _toConsumableArray from\"/Users/andrei/Desktop/diplom-project/movies-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/andrei/Desktop/diplom-project/movies-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/andrei/Desktop/diplom-project/movies-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useEffect}from'react';import{Chip}from\"@material-ui/core\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Genres=function Genres(_ref){var selectedGenres=_ref.selectedGenres,setSelectedGenres=_ref.setSelectedGenres,genres=_ref.genres,setGenres=_ref.setGenres,type=_ref.type,setPage=_ref.setPage;var fetchGenres=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://api.themoviedb.org/3/genre/\".concat(type,\"/list?api_key=e9e3f515fc57336efd9167d5b156073d&language=en-US\"));case 2:response=_context.sent;if(!response.ok){_context.next=10;break;}_context.next=6;return response.json();case 6:data=_context.sent;setGenres(data.genres);_context.next=11;break;case 10:alert(\"error\"+response.status);case 11:case\"end\":return _context.stop();}}},_callee);}));return function fetchGenres(){return _ref2.apply(this,arguments);};}();useEffect(function(){fetchGenres();return function(){setGenres({});};},[]);var handleAdd=function handleAdd(genre){setSelectedGenres([].concat(_toConsumableArray(selectedGenres),[genre]));setGenres(genres.filter(function(item){return item.id!==genre.id;}));setPage(1);};var handleRemove=function handleRemove(genre){setSelectedGenres(selectedGenres.filter(function(selected){return selected.id!==genre.id;}));setGenres([].concat(_toConsumableArray(genres),[genre]));setPage(1);};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"6px 0\"},children:[selectedGenres.map(function(genre){return/*#__PURE__*/_jsx(Chip,{style:{margin:2},label:genre.name,color:\"primary\",clickable:true,size:\"small\",onDelete:function onDelete(){return handleRemove(genre);}},genre.id);}),genres.map(function(genre){return/*#__PURE__*/_jsx(Chip,{style:{margin:2},label:genre.name,clickable:true,size:\"small\",onClick:function onClick(){return handleAdd(genre);}},genre.id);})]});};","map":{"version":3,"sources":["/Users/andrei/Desktop/diplom-project/movies-app/src/Components/Genres/Genres.jsx"],"names":["React","useEffect","Chip","Genres","selectedGenres","setSelectedGenres","genres","setGenres","type","setPage","fetchGenres","fetch","response","ok","json","data","alert","status","handleAdd","genre","filter","item","id","handleRemove","selected","padding","map","margin","name"],"mappings":"ufAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAAQC,IAAR,KAAmB,mBAAnB,C,wFAEA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAOO,IANFC,CAAAA,cAME,MANFA,cAME,CALFC,iBAKE,MALFA,iBAKE,CAJFC,MAIE,MAJFA,MAIE,CAHFC,SAGE,MAHFA,SAGE,CAFFC,IAEE,MAFFA,IAEE,CADFC,OACE,MADFA,OACE,CAEzB,GAAMC,CAAAA,WAAW,2FAAG,2KACOC,CAAAA,KAAK,8CAAwCH,IAAxC,kEADZ,QACVI,QADU,mBAEZA,QAAQ,CAACC,EAFG,gDAGOD,CAAAA,QAAQ,CAACE,IAAT,EAHP,QAGNC,IAHM,eAIZR,SAAS,CAACQ,IAAI,CAACT,MAAN,CAAT,CAJY,+BAMZU,KAAK,CAAC,QAAUJ,QAAQ,CAACK,MAApB,CAAL,CANY,uDAAH,kBAAXP,CAAAA,WAAW,2CAAjB,CAUAT,SAAS,CAAC,UAAM,CACZS,WAAW,GAEX,MAAO,WAAM,CACTH,SAAS,CAAC,EAAD,CAAT,CACH,CAFD,CAGH,CANQ,CAMN,EANM,CAAT,CAQA,GAAMW,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzBd,iBAAiB,8BAAKD,cAAL,GAAqBe,KAArB,GAAjB,CACAZ,SAAS,CAACD,MAAM,CAACc,MAAP,CAAc,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYH,KAAK,CAACG,EAA5B,EAAd,CAAD,CAAT,CACAb,OAAO,CAAC,CAAD,CAAP,CACH,CAJD,CAMA,GAAMc,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACJ,KAAD,CAAW,CAC5Bd,iBAAiB,CACbD,cAAc,CAACgB,MAAf,CAAsB,SAACI,QAAD,QAAcA,CAAAA,QAAQ,CAACF,EAAT,GAAgBH,KAAK,CAACG,EAApC,EAAtB,CADa,CAAjB,CAGAf,SAAS,8BAAKD,MAAL,GAAaa,KAAb,GAAT,CACAV,OAAO,CAAC,CAAD,CAAP,CACH,CAND,CAQA,mBACI,aAAK,KAAK,CAAE,CAAEgB,OAAO,CAAE,OAAX,CAAZ,WACKrB,cAAc,CAACsB,GAAf,CAAmB,SAACP,KAAD,qBAChB,KAAC,IAAD,EACI,KAAK,CAAE,CAAEQ,MAAM,CAAE,CAAV,CADX,CAEI,KAAK,CAAER,KAAK,CAACS,IAFjB,CAII,KAAK,CAAC,SAJV,CAKI,SAAS,KALb,CAMI,IAAI,CAAC,OANT,CAOI,QAAQ,CAAE,0BAAML,CAAAA,YAAY,CAACJ,KAAD,CAAlB,EAPd,EAGSA,KAAK,CAACG,EAHf,CADgB,EAAnB,CADL,CAYKhB,MAAM,CAACoB,GAAP,CAAW,SAACP,KAAD,qBACR,KAAC,IAAD,EACI,KAAK,CAAE,CAAEQ,MAAM,CAAE,CAAV,CADX,CAEI,KAAK,CAAER,KAAK,CAACS,IAFjB,CAII,SAAS,KAJb,CAKI,IAAI,CAAC,OALT,CAMI,OAAO,CAAE,yBAAMV,CAAAA,SAAS,CAACC,KAAD,CAAf,EANb,EAGSA,KAAK,CAACG,EAHf,CADQ,EAAX,CAZL,GADJ,CAyBH,CAlEM","sourcesContent":["import React, {useEffect} from 'react';\nimport {Chip} from \"@material-ui/core\";\n\nexport const Genres = ({\n                           selectedGenres,\n                           setSelectedGenres,\n                           genres,\n                           setGenres,\n                           type,\n                           setPage,\n                       }) => {\n\n    const fetchGenres = async () => {\n        const response = await fetch( `https://api.themoviedb.org/3/genre/${type}/list?api_key=e9e3f515fc57336efd9167d5b156073d&language=en-US`);\n        if (response.ok) {\n            const data = await response.json();\n            setGenres(data.genres);\n        } else {\n            alert(\"error\" + response.status);\n        }\n    };\n\n    useEffect(() => {\n        fetchGenres();\n\n        return () => {\n            setGenres({});\n        }\n    }, []);\n\n    const handleAdd = (genre) => {\n        setSelectedGenres([...selectedGenres, genre]);\n        setGenres(genres.filter((item) => item.id !== genre.id));\n        setPage(1);\n    };\n\n    const handleRemove = (genre) => {\n        setSelectedGenres(\n            selectedGenres.filter((selected) => selected.id !== genre.id)\n        );\n        setGenres([...genres, genre]);\n        setPage(1);\n    };\n\n    return (\n        <div style={{ padding: \"6px 0\" }}>\n            {selectedGenres.map((genre) => (\n                <Chip\n                    style={{ margin: 2 }}\n                    label={genre.name}\n                    key={genre.id}\n                    color=\"primary\"\n                    clickable\n                    size=\"small\"\n                    onDelete={() => handleRemove(genre)}\n                />\n            ))}\n            {genres.map((genre) => (\n                <Chip\n                    style={{ margin: 2 }}\n                    label={genre.name}\n                    key={genre.id}\n                    clickable\n                    size=\"small\"\n                    onClick={() => handleAdd(genre)}\n                />\n            ))}\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}